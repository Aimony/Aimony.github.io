import{_ as s,o as i,c as a,a7 as e}from"./chunks/framework.D6IbrqK8.js";const F=JSON.parse('{"title":"Redis 缓存中间件编译安装","description":"Redis 是一个实时数据平台（The Real-time Data Platform.） ，是一个快速、开源、内存中的数据存储结构，在 SpringBoot 项目中，使用最广泛的缓存中间件就是 Redis 了，本文将讨论如何编译安装 Redis 到 Linux 服务器。","frontmatter":{"title":"Redis 缓存中间件编译安装","description":"Redis 是一个实时数据平台（The Real-time Data Platform.） ，是一个快速、开源、内存中的数据存储结构，在 SpringBoot 项目中，使用最广泛的缓存中间件就是 Redis 了，本文将讨论如何编译安装 Redis 到 Linux 服务器。","categories":["Linux 企业级运维"],"outline":[2,3],"date":"2024-07-16T00:00:00.000Z","tags":["Linux","Redis","编译安装"],"head":[["meta",{"name":"keywords","content":"Linux企业级运维, 编译安装, MYSQL, Linux, Nginx, Minio, SpringBoot, Redis"}]],"cover":"https://cdn.imufeng.cn/mblog/a7f0085a6b4aed958311b3edc4b98cc7.png"},"headers":[],"relativePath":"training/linux/springboot-app-launch/redis.md","filePath":"training/linux/springboot-app-launch/redis.md","lastUpdated":1728132256000}'),n={name:"training/linux/springboot-app-launch/redis.md"},t=e(`<h1 id="第二步-缓存中间件-redis-编译安装" tabindex="-1">第二步 缓存中间件 Redis 编译安装 <a class="header-anchor" href="#第二步-缓存中间件-redis-编译安装" aria-label="Permalink to &quot;第二步 缓存中间件 Redis 编译安装&quot;">​</a></h1><h2 id="一、简介" tabindex="-1">一、简介 <a class="header-anchor" href="#一、简介" aria-label="Permalink to &quot;一、简介&quot;">​</a></h2><p>根据 <a href="https://redis.io" target="_blank" rel="noreferrer">Redis 官网</a> 的信息，Redis 是一个实时数据平台（The Real-time Data Platform.） ，是一个快速、开源、内存中的数据存储结构，也可以用作文档或矢量数据库。</p><p>由于内存读写效率高、速度快的特点，Redis 使用<strong>内存数据集</strong>，能够支持每秒数十万次的读写操作。并且Redis 的所有操作都是原子性的，这意味着操作要么完全执行，要么完全不执行。这种特性对于确保数据的一致性和完整性至关重要，尤其是在高并发环境下处理事务时。</p><p>在 SpringBoot 项目中，使用最广泛的缓存中间件就是 Redis 了，本教程将源码开始，介绍如何编译安装 Redis 到 Linux 服务器。</p><h2 id="二、安装" tabindex="-1">二、安装 <a class="header-anchor" href="#二、安装" aria-label="Permalink to &quot;二、安装&quot;">​</a></h2><h3 id="_2-1-安装前准备" tabindex="-1">2.1 安装前准备 <a class="header-anchor" href="#_2-1-安装前准备" aria-label="Permalink to &quot;2.1 安装前准备&quot;">​</a></h3><blockquote><p>在此处安装时，需要的 make 、openssl等工具和开发库已在之前教程中安装，如果没有安装，在编译过程中遇到缺少的依赖按照之前教程自行安装即可，此处不再赘述。</p></blockquote><p>执行以下命令即可下载Redis 源码包：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.redis.io/redis-stable.tar.gz</span></span></code></pre></div><p>解压后目录结构：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[root@imufeng opt]# tar -zxf redis-stable.tar.gz -C /usr/src/</span></span>
<span class="line"><span>[root@imufeng opt]# cd /usr/src/redis-stable/</span></span>
<span class="line"><span>[root@imufeng redis-stable]# ls</span></span>
<span class="line"><span>00-RELEASENOTES     COPYING   MANIFESTO   runtest-cluster    sentinel.conf  utils</span></span>
<span class="line"><span>BUGS                deps      README.md   runtest-moduleapi  src</span></span>
<span class="line"><span>CODE_OF_CONDUCT.md  INSTALL   redis.conf  runtest-sentinel   tests</span></span>
<span class="line"><span>CONTRIBUTING.md     Makefile  runtest     SECURITY.md        TLS.md</span></span></code></pre></div><h3 id="_2-2-开始编译安装" tabindex="-1">2.2 开始编译安装 <a class="header-anchor" href="#_2-2-开始编译安装" aria-label="Permalink to &quot;2.2 开始编译安装&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>Redis 没有编译安装选项校验的步骤，<strong>PREFIX</strong> 参数需要在 install 时指定。</p></div><p>执行以下命令，开始编译：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BUILD_TLS=yes</span></span></code></pre></div><p>编译成功后，开始安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PREFIX=/usr/local/redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>安装成功后，目录结构如下：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[root@imufeng bin]# pwd</span></span>
<span class="line"><span>/usr/local/redis/bin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@imufeng bin]# ls</span></span>
<span class="line"><span>redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server</span></span></code></pre></div><h2 id="三、配置" tabindex="-1">三、配置 <a class="header-anchor" href="#三、配置" aria-label="Permalink to &quot;三、配置&quot;">​</a></h2><h3 id="_3-1-环境变量配置" tabindex="-1">3.1 环境变量配置 <a class="header-anchor" href="#_3-1-环境变量配置" aria-label="Permalink to &quot;3.1 环境变量配置&quot;">​</a></h3><p>修改 <code>/etc/profile</code> 文件，在 <code>PATH</code> 写入 环境变量即可：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:/usr/local/redis/bin</span></span></code></pre></div><p>执行如下命令加载修改：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/profile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 或</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/profile</span></span></code></pre></div><p>环境变量生效。</p><h3 id="_3-2-redis-conf-配置文件" tabindex="-1">3.2 Redis.conf 配置文件 <a class="header-anchor" href="#_3-2-redis-conf-配置文件" aria-label="Permalink to &quot;3.2 Redis.conf 配置文件&quot;">​</a></h3><p><code>redis.conf</code> 配置文件需要在启动 Redis 时指定，其详细示例在源码包根目录下，可以将其拷贝到合适的地方，在启动时指定：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/redis/etc/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/src/redis-stable/redis.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/redis/etc/</span></span></code></pre></div><p>也可只保留部分配置（未指定则为默认）</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bind 0.0.0.0			</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">requirepass root		</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 访问密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protected-mode yes		</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安全模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port 6379				</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">daemonize yes			</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启守护线程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pidfile /var/run/redis_6379.pid		</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PID文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">loglevel notice			</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志等级</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logfile </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">				# 日志文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">databases 16			</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化数据库</span></span></code></pre></div><h3 id="_3-3-redis-service-配置" tabindex="-1">3.3 Redis.service 配置 <a class="header-anchor" href="#_3-3-redis-service-配置" aria-label="Permalink to &quot;3.3 Redis.service 配置&quot;">​</a></h3><p>源码包 <code>utils/systemd-redis_server.service</code> 文件提供了 systemed 服务文件，根据提示配置 redis.conf 的位置后，大致如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Redis data structure server</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Documentation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=https://redis.io/documentation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Wants</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=network-online.target</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=network-online.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/usr/local/bin/redis-server /usr/local/redis/etc/ </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LimitNOFILE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=10032</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NoNewPrivileges</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=yes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=notify</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TimeoutStartSec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=infinity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TimeoutStopSec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=infinity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UMask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=0077</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=multi-user.target</span></span></code></pre></div><p>由于我们选用的 AlmaLinux9 基于 RHCE 9，其 service 文件在 <code>/lib/systemd/system/</code> 目录下，需要将 service 文件重命名为 <code>redis.service</code> 并拷贝到该目录下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/src/redis-stable/utils/systemd-redis_server.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /lib/systemd/system/redis.service</span></span></code></pre></div><p>然后执行 <code>systemctl daemon-reload</code> 命令，即可加载更新。</p><h2 id="四、启动执行" tabindex="-1">四、启动执行 <a class="header-anchor" href="#四、启动执行" aria-label="Permalink to &quot;四、启动执行&quot;">​</a></h2><p>Redis 启动命令 <code>redis-server /path/to/conf</code>，即直接执行 redis-server 并指定配置文件即可，如果 <code>protected-mode</code> 配置为 yes，即后端运行，如果为 no，则会将日志打印到控制台。</p><p>我们已经配置了 Redis.service 服务，所以执行 <code>systemctl start redis</code> 即可启动服务：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@imufeng system]# systemctl start redis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@imufeng system]# systemctl status redis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">●</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> structure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     Loaded:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (/usr/lib/systemd/system/redis.service; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preset:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     Active:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (running) since Tue 2024-07-16 13:19:13 ACST; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14min</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       Docs:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://redis.io/documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Process:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 38149</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ExecStart=/usr/local/redis/bin/redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/redis/etc/redis.conf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 38150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (redis-server)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Tasks:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (limit: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48598</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     Memory:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8.3M</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        CPU:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 15.082s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     CGroup:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /system.slice/redis.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">             └─38150</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/usr/local/redis/bin/redis-server 0.0.0.0:6379&quot;</span></span></code></pre></div><p>如果看到上方内容，即代表 redis 服务启动成功。</p><p>我们可以使用 redis-cli 命令或 RedisInsight、AnotherRedisDesktop等工具连接Redis，这里以 redis-cli 举例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@imufeng system]# redis-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ping</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NOAUTH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Authentication</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> required.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ping</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PONG</span></span></code></pre></div><p>由于配置文件指定了密码，所以需要认证才可以访问。</p><p>至此，Redis 的编译安装已完成。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>本文仅讨论Redis 的编译安装，Redis 命令、集群操作、Redis Stack、Redis Insight 工具，等其他内容，详见博客后续更新。</p></div>`,48),l=[t];function p(h,k,d,r,c,o){return i(),a("div",{"data-pagefind-body":!0},l)}const E=s(n,[["render",p]]);export{F as __pageData,E as default};
