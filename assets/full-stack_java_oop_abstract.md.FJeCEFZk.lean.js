import{_ as s,o as i,c as a,a8 as n}from"./chunks/framework.CtAXtxNA.js";const F=JSON.parse(`{"title":"抽象类和抽象方法","description":"在一个较为复杂的继承链中，祖先类更具有一般性，作为派生其他类的基类而不糊将其作为用来构造实例。","frontmatter":{"description":"在一个较为复杂的继承链中，祖先类更具有一般性，作为派生其他类的基类而不糊将其作为用来构造实例。","categories":["JAVA 学习笔记"],"tags":["JAVA","OOP"],"outline":[2,3],"head":[["script",{"charset":"UTF-8","id":"LA_COLLECT","src":"//sdk.51.la/js-sdk-pro.min.js"}],["script",{},"typeof LA !== 'undefined' && LA.init({\\"id\\":\\"475303\\",\\"ck\\":\\"3JvYouexrZJnA5FL\\",\\"hashMode\\":true})"]]},"headers":[],"relativePath":"full-stack/java/oop/abstract.md","filePath":"full-stack/java/oop/abstract.md","lastUpdated":1728132256000}`),h={name:"full-stack/java/oop/abstract.md"},l=n("",6),k=[l];function p(t,e,E,r,d,g){return i(),a("div",{"data-pagefind-body":!0},k)}const c=s(h,[["render",p]]);export{F as __pageData,c as default};
