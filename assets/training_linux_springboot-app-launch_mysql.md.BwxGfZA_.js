import{_ as s,o as a,c as i,a7 as n}from"./chunks/framework.D6IbrqK8.js";const y=JSON.parse('{"title":"Mysql 数据库编译安装","description":"MySQL是一款流行的开源关系型数据库管理系统（RDBMS），适用于从小型网站到大型企业级应用的各种场景。它以GNU通用公共许可证发行，实现成本效益。MySQL具备高性能、高可靠性和强大的可伸缩性，支持多线程、跨平台操作，及多种存储引擎，适应不同数据处理需求。其优势在于开源免费、社区活跃、易于学习与使用，且能有效处理大量并发连接，提供丰富的SQL功能及安全性保障，成为Web开发和数据存储领域的首选方案。","frontmatter":{"title":"Mysql 数据库编译安装","description":"MySQL是一款流行的开源关系型数据库管理系统（RDBMS），适用于从小型网站到大型企业级应用的各种场景。它以GNU通用公共许可证发行，实现成本效益。MySQL具备高性能、高可靠性和强大的可伸缩性，支持多线程、跨平台操作，及多种存储引擎，适应不同数据处理需求。其优势在于开源免费、社区活跃、易于学习与使用，且能有效处理大量并发连接，提供丰富的SQL功能及安全性保障，成为Web开发和数据存储领域的首选方案。","categories":["Linux 企业级运维"],"outline":[2,3],"date":"2024-05-05T00:00:00.000Z","tags":["Mysql","编译安装","运维"],"head":[["meta",{"name":"keywords","content":"Linux企业级运维, 编译安装, MYSQL, Linux, Nginx, Minio, SpringBoot, Redis"}]],"cover":"https://cdn.imufeng.cn/mblog/de6d10ef17dcb6f1d9902dc612375980.png"},"headers":[],"relativePath":"training/linux/springboot-app-launch/mysql.md","filePath":"training/linux/springboot-app-launch/mysql.md","lastUpdated":1728132256000}'),e={name:"training/linux/springboot-app-launch/mysql.md"},l=n(`<h1 id="第二步-mysql-数据库编译安装" tabindex="-1">第二步 Mysql 数据库编译安装 <a class="header-anchor" href="#第二步-mysql-数据库编译安装" aria-label="Permalink to &quot;第二步 Mysql 数据库编译安装&quot;">​</a></h1><h2 id="一、简介" tabindex="-1">一、简介 <a class="header-anchor" href="#一、简介" aria-label="Permalink to &quot;一、简介&quot;">​</a></h2><p>MySQL是最流行的关系型数据库管理系统之一，由瑞典 MySQL AB 公司开发，目前属于 Oracle 公司。因其性能高、可靠性强和易用性高而在各种应用中得到广泛应用。</p><p>MYSQL 的编译安装使用 CMAKE 来完成，它是一款跨平台的开源的构建系统，用于管理软件的编译过程。它可以通过简单的配置文件（CMakeLists.txt）来描述项目的构建过程，生成适合本地平台的原生构建文件。它比传统的编译安装更加灵活和方便。</p><p>之前有写过 MYSQL for Windows 直装教程：<a href="https://www.imufeng.cn/training/software/mysql-for-win-install.html" target="_blank" rel="noreferrer">Mysql for Windows 安装及初始化 </a>，但是企业级服务器部署中，为了提高性能并满足自定义配置，基本是要求编译安装。</p><h2 id="二、环境准备" tabindex="-1">二、环境准备 <a class="header-anchor" href="#二、环境准备" aria-label="Permalink to &quot;二、环境准备&quot;">​</a></h2><p>MYSQL 编译安装对系统要求较高，推荐 4C8G 60G 配置。本次演示使用 AlmaLinux9 + mysql 8.0.37，系统配置为 16C 32G。可能好还需要提前配置阿里云 YUM 源等。</p><h2 id="三、安装" tabindex="-1">三、安装 <a class="header-anchor" href="#三、安装" aria-label="Permalink to &quot;三、安装&quot;">​</a></h2><h3 id="_2-1-下载" tabindex="-1">2.1 下载 <a class="header-anchor" href="#_2-1-下载" aria-label="Permalink to &quot;2.1 下载&quot;">​</a></h3><p>安装包下载页面：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noreferrer">MySQL :: Download MySQL Community Server</a> ，本文章以 MYSQL-8.0.37 举例，下载文件带boost的源码包：<code>mysql-boost-8.0.37.tar.gz</code> ，推荐解压到 <code>/usr/src</code> ，解压后目录结构如下：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>boost            Doxyfile-ignored     libchangestreams  packaging          sql-common</span></span>
<span class="line"><span>client           Doxyfile.in          libmysql          plugin             storage</span></span>
<span class="line"><span>cmake            doxygen_resources    libservices       README             strings</span></span>
<span class="line"><span>CMakeLists.txt   extra                LICENSE           router             support-files</span></span>
<span class="line"><span>components       include              man               run_doxygen.cmake  testclients</span></span>
<span class="line"><span>config.h.cmake   INSTALL              mysql-test        scripts            unittest</span></span>
<span class="line"><span>configure.cmake  libbinlogevents      MYSQL_VERSION     share              utilities</span></span>
<span class="line"><span>Docs             libbinlogstandalone  mysys             sql                vio</span></span></code></pre></div><h3 id="_2-2-编译检查" tabindex="-1">2.2 编译检查 <a class="header-anchor" href="#_2-2-编译检查" aria-label="Permalink to &quot;2.2 编译检查&quot;">​</a></h3><p>Mysql 编译安装使用 CMAKE 构建工具，CMAKE 是依赖于c语言的，所以我们首先必须安装 CMAKE 及其依赖：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-toolset-12</span></span></code></pre></div><p>CMAKE 安装之后，即可开始编译安装，编译安装选项不是固定的，你完全可以按照阅读官方文档<a href="https://dev.mysql.com/doc/mysqld-version-reference/en/build-options.html" target="_blank" rel="noreferrer">MySQL 8 Build Options</a> 并自行增删，这就是编译安装最大的魅力所在。以下是我的编译安装选项</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_INSTALL_PREFIX=/usr/local/mysql/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DMYSQL_DATADIR=/usr/local/mysql/data </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DDEFAULT_CHARSET=utf8mb4 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DDEFAULT_COLLATION=utf8mb4_general_ci </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_EXTRA_CHARSETS=all </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_MYISAM_STORAGE_ENGINE=1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_INNOBASE_STORAGE_ENGINE=1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_MEMORY_STORAGE_ENGINE=1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_READLINE=1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_INNODB_MEMCACHED=1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_DEBUG=OFF </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_ZLIB=bundled </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DENABLED_LOCAL_INFILE=1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DENABLED_PROFILING=ON </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DMYSQL_MAINTAINER_MODE=OFF </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DMYSQL_TCP_PORT=3306 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DDOWNLOAD_BOOST=1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DWITH_BOOST=/usr/src/mysql-8.0.37/boost  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DFORCE_INSOURCE_BUILD=1</span></span></code></pre></div><p>其他教程可能会给出一堆的 yum 安装，但是其中可能会有一些不需要的依赖，所以一般都是在执行 CMAKE 编译检查命令时，遇到报错缺少依赖再去安装，如下图：</p><p><img src="https://cdn.imufeng.cn/mblog/ad341fa229ccf953b20b7b77c41131dd.png" alt="image-20240612162753836"></p><p>根据图片我们可以发现，系统缺少 <code>libtirpc-devel</code> 软件包，此时即可按照提示安装该软件包后重新执行 CMAKE 命令。经过我的测试，以下依赖需要安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ncurse-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libtirpc-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpcgen</span></span></code></pre></div><p>只要看到如下内容，即可证明通过了编译安装检查，接下来你就可以开始安装了。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-- Configuring done (2.3s)</span></span>
<span class="line"><span>-- Generating done (2.7s)</span></span>
<span class="line"><span>-- Build files have been written to: /usr/src/mysql-8.0.37</span></span></code></pre></div><h3 id="_2-3-开始安装" tabindex="-1">2.3 开始安装 <a class="header-anchor" href="#_2-3-开始安装" aria-label="Permalink to &quot;2.3 开始安装&quot;">​</a></h3><p>编译安装是个很久很漫长的过程，一定要注意留足60G左右的存储空间，否则可能会编译一个小时提示空间不足。如果你的配置足够高，可以为 make 添加 -j 选项来开启多线程，这里选择使用16线程来编译。</p><p>执行命令：<code>make -j16 &amp;&amp; make install</code></p><p>然后就是漫长的等待了。</p><h2 id="四、启动" tabindex="-1">四、启动 <a class="header-anchor" href="#四、启动" aria-label="Permalink to &quot;四、启动&quot;">​</a></h2><h3 id="_4-1-配置文件" tabindex="-1">4.1 配置文件 <a class="header-anchor" href="#_4-1-配置文件" aria-label="Permalink to &quot;4.1 配置文件&quot;">​</a></h3><p>配置文件：<code>/etc/my.cnf</code></p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[mysqld]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = mysql</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">basedir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /usr/local/mysql</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">datadir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/data/mysql_dev </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不指定就在 $basedir/data 下</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lower_case_table_names</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 忽略大小写</span></span></code></pre></div><p>这么多就够了。</p><h3 id="_4-2-用户和用户组" tabindex="-1">4.2 用户和用户组 <a class="header-anchor" href="#_4-2-用户和用户组" aria-label="Permalink to &quot;4.2 用户和用户组&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">groupadd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不创建HOME目录，并不允许登录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useradd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -M</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sbin/nologin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/mysql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql.mysql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/mysql</span></span></code></pre></div><h3 id="_4-3-环境变量" tabindex="-1">4.3 环境变量 <a class="header-anchor" href="#_4-3-环境变量" aria-label="Permalink to &quot;4.3 环境变量&quot;">​</a></h3><p>推荐为 MYSQL 添加一个系统环境变量，编辑<code>/etc/profile</code>，并写入如下内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:/usr/local/mysql/bin/</span></span></code></pre></div><h3 id="_4-4-初始化" tabindex="-1">4.4 初始化 <a class="header-anchor" href="#_4-4-初始化" aria-label="Permalink to &quot;4.4 初始化&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /usr/local/mysql/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>./bin/mysqld --user=mysql --initialize -defaults-file=/etc/my.cnf</span></span></code></pre></div><p>执行命令后，会获得一个临时密码，此密码强制要求登录后修改。</p><h3 id="_4-5-启动" tabindex="-1">4.5 启动 <a class="header-anchor" href="#_4-5-启动" aria-label="Permalink to &quot;4.5 启动&quot;">​</a></h3><p>启动命令：<code>mysqld &amp;</code></p><h2 id="五、连接测试" tabindex="-1">五、连接测试 <a class="header-anchor" href="#五、连接测试" aria-label="Permalink to &quot;五、连接测试&quot;">​</a></h2><p>Mysql 服务启动后，即可进行连接：<code>./mysql -uroot -ppassWord</code></p><p>以下命令修改密码：</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;PASSWORD&#39;;</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://www.runoob.com/mysql/mysql-tutorial.html" target="_blank" rel="noreferrer">MySQL 教程 | 菜鸟教程 (runoob.com)</a></li><li><a href="https://dev.mysql.com/doc/mysqld-version-reference/en/build-options.html" target="_blank" rel="noreferrer">MySQL 8 Build Options</a></li></ul>`,47),t=[l];function p(h,r,d,k,o,c){return a(),i("div",{"data-pagefind-body":!0},t)}const E=s(e,[["render",p]]);export{y as __pageData,E as default};
