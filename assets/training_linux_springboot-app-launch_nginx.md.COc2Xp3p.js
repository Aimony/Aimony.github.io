import{_ as s,o as i,c as a,a7 as n}from"./chunks/framework.D6IbrqK8.js";const o=JSON.parse('{"title":"Nginx 服务器编译安装","description":"Nginx 作为当下最强大的正向/反向代理服务器，以及应用最广泛的轻量级Web服务器，能够适用于多种场景，本文将描述 Nginx WEB 服务器从源码编译安装的流程。","frontmatter":{"title":"Nginx 服务器编译安装","description":"Nginx 作为当下最强大的正向/反向代理服务器，以及应用最广泛的轻量级Web服务器，能够适用于多种场景，本文将描述 Nginx WEB 服务器从源码编译安装的流程。","categories":["Linux 企业级运维"],"outline":[2,3],"date":"2024-04-20T00:00:00.000Z","tags":["Linux","Nginx","编译安装"],"head":[["meta",{"name":"keywords","content":"Linux企业级运维, 编译安装, MYSQL, Linux, Nginx, Minio, SpringBoot, Redis"}]],"cover":"https://cdn.imufeng.cn/mblog/006125ea4376a1e135b8a601c2418948.jpg"},"headers":[],"relativePath":"training/linux/springboot-app-launch/nginx.md","filePath":"training/linux/springboot-app-launch/nginx.md","lastUpdated":1728132256000}'),l={name:"training/linux/springboot-app-launch/nginx.md"},p=n(`<h1 id="第一步-web-服务器-nginx-编译安装" tabindex="-1">第一步 WEB 服务器 Nginx 编译安装 <a class="header-anchor" href="#第一步-web-服务器-nginx-编译安装" aria-label="Permalink to &quot;第一步 WEB 服务器 Nginx 编译安装&quot;">​</a></h1><h2 id="一、简介" tabindex="-1">一、简介 <a class="header-anchor" href="#一、简介" aria-label="Permalink to &quot;一、简介&quot;">​</a></h2><p>根据 <a href="https://nginx.org/" target="_blank" rel="noreferrer">Nginx官网</a>介绍。Nginx 是 an HTTP and reverse proxy server, a mail proxy server, and a generic TCP/UDP proxy server（HTTP和反向代理服务器，邮件代理服务器和通用TCP/UDP代理服务器）。它还是应用最广泛的轻量级Web服务器。在性能上，Nginx占用很少的系统资源，能支持更多的并发连接，达到更高的访问效率；在功能上，Nginx是优秀的代理服务器和负载均衡服务器；在安装配置上，Nginx安装简单、配置灵活。</p><h2 id="二、安装" tabindex="-1">二、安装 <a class="header-anchor" href="#二、安装" aria-label="Permalink to &quot;二、安装&quot;">​</a></h2><h3 id="_2-1-下载" tabindex="-1">2.1 下载 <a class="header-anchor" href="#_2-1-下载" aria-label="Permalink to &quot;2.1 下载&quot;">​</a></h3><p>下载地址：<a href="https://nginx.org/en/download.html" target="_blank" rel="noreferrer">nginx: download</a> 选择 Stable version 最新的稳定版即可。下载后，解压到 <code>/usr/src</code> 目录下，目录结构如下：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>auto     CHANGES.ru  configure  html     Makefile  objs    src</span></span>
<span class="line"><span>CHANGES  conf        contrib    LICENSE  man       README</span></span></code></pre></div><h3 id="_2-2-安装前准备" tabindex="-1">2.2 安装前准备 <a class="header-anchor" href="#_2-2-安装前准备" aria-label="Permalink to &quot;2.2 安装前准备&quot;">​</a></h3><p>编译安装需要 C 语言及 make 工具的支持，先安装这两个，其他依赖根据编译检查的提示再逐一安装。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g++</span></span></code></pre></div><h3 id="_2-3-编译选项" tabindex="-1">2.3 编译选项 <a class="header-anchor" href="#_2-3-编译选项" aria-label="Permalink to &quot;2.3 编译选项&quot;">​</a></h3><p>我是用的编译安装选项如下，可以根据具体业务调整，详见官方文档 <a href="https://nginx.org/en/docs/configure.html" target="_blank" rel="noreferrer">Building nginx from Sources</a>。</p><p>进入源码包所在目录执行以下命令做编译安装检查：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--prefix=/data/software/nginx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--group=nginx </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-pcre </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_ssl_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_v2_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_realip_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_addition_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_sub_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_dav_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_flv_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_mp4_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_gunzip_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_gzip_static_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_random_index_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_secure_link_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_stub_status_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_auth_request_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_image_filter_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-http_slice_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-mail </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-threads </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-file-aio </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-stream </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-mail_ssl_module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--with-stream_ssl_module</span></span></code></pre></div><p>检查过程中，会遇到一些报错，如下：</p><p><img src="https://cdn.imufeng.cn/mblog/9921b40beeb127a45f05102faffdbbd0.png" alt="image-20240409103432796"></p><p><img src="https://cdn.imufeng.cn/mblog/c5ef3f38fc2e7d31ab1de26901af20d0.png" alt="image-20240409103429712"></p><p>从报错中，我们可以清晰的看到缺少 XXX 模块，一般都是安装 XXX-devel 包含依赖库的包即可，我安装了如下软件包：<code>pcre-devel</code>、<code>openssl-devel</code>、<code>gd-devel</code>。</p><h3 id="_2-4-编译安装" tabindex="-1">2.4 编译安装 <a class="header-anchor" href="#_2-4-编译安装" aria-label="Permalink to &quot;2.4 编译安装&quot;">​</a></h3><p>使用 <code>make</code> 命令编译，使用 <code>make install</code> 命令安装。编译时可以使用 <code>make -j[n]</code> 参数指定多线程，一般为机器核心数。</p><p><img src="https://cdn.imufeng.cn/mblog/6d7a88c02227819d393cdc7b78ec36c6.png" alt="image-20240409103602629"></p><p>编译安装成功之后，即可在指定的路径看到 nginx 了：</p><p><img src="https://cdn.imufeng.cn/mblog/bd2b17443881488fe9b780e5cc777ad2.png" alt="image-20240409113645980"></p><h3 id="_2-5-启动" tabindex="-1">2.5 启动 <a class="header-anchor" href="#_2-5-启动" aria-label="Permalink to &quot;2.5 启动&quot;">​</a></h3><p>运行 <code>sbin</code> 里边的 <code>nginx</code> 文件即可启动 nginx：</p><p><img src="https://cdn.imufeng.cn/mblog/c53087206ab2eea0f8f9a158190106e6.png" alt="image-20240409113830916"></p><p>可以看到 80 端口已经被占用了，curl 访问一下，可以看到 html 页面结构，浏览器也可以直接访问，证明 nginx 启动没问题了。</p><p><img src="https://cdn.imufeng.cn/mblog/5a6fa4a463b270f83af04c2963e1a097.png" alt="image-20240409103825846"></p><p><img src="https://cdn.imufeng.cn/mblog/2b46410a1d937a58a0ee5d1d24827e5b.png" alt="image-20240409104522844"></p><h2 id="三、配置" tabindex="-1">三、配置 <a class="header-anchor" href="#三、配置" aria-label="Permalink to &quot;三、配置&quot;">​</a></h2><p>Nginx 的配置推荐 <a href="https://www.digitalocean.com/community/tools/nginx" target="_blank" rel="noreferrer">Nginx 配置工具</a>，这个网站可以使用可视化页面带你进行 Nginx 的配置，非常适合小白。</p><h3 id="_3-1-使用-systemd-管理" tabindex="-1">3.1 使用 systemd 管理 <a class="header-anchor" href="#_3-1-使用-systemd-管理" aria-label="Permalink to &quot;3.1 使用 systemd 管理&quot;">​</a></h3><p>要将 nginx 配置为服务交给 systemd 管理，需要新增一个 service 文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/lib/systemd/system/nginx.service</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=nginx web server</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Documentation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=http://nginx.org/en/docs/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=network.target remote-fs.target nss-lookup.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=forking</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PIDFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/data/service/nginx/logs/nginx.pid</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStartPre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/data/service/nginx/sbin/nginx -t -c /data/service/nginx/conf/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/data/service/nginx/sbin/nginx -c /data/service/nginx/conf/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecReload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= /data/service/nginx/sbin/nginx -s reload</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= /data/service/nginx/sbin/nginx -s stop</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PrivateTmp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=multi-user.target</span></span></code></pre></div><p>通过 systemctl 命令启动 nginx：</p><p>启动前一定要使用 <code>nginx -s stop</code> 命令或 <code>kill</code> 命令停止 nginx，否则会报端口占用。</p><p><img src="https://cdn.imufeng.cn/mblog/cf1ff822fe98d64c3f71c7625bac00f2.png" alt="image-20240409114356091"></p><p>开机自启：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl enable nginx</span></span>
<span class="line"><span>Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.</span></span></code></pre></div><h3 id="_3-2-基础配置" tabindex="-1">3.2 基础配置 <a class="header-anchor" href="#_3-2-基础配置" aria-label="Permalink to &quot;3.2 基础配置&quot;">​</a></h3><p>Nginx 只有一个配置文件就是 <code>nginx.conf</code> ，能看到的配置文件都是通过 <code>include</code> 引入的，方便管理。</p><p>nginx.conf 配置结构如下：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>...              #全局配置</span></span>
<span class="line"><span></span></span>
<span class="line"><span>events {         #events块</span></span>
<span class="line"><span>   ...</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>http      #http块</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    ...   #http全局块</span></span>
<span class="line"><span>    server        #server块</span></span>
<span class="line"><span>    { </span></span>
<span class="line"><span>        ...       #server全局块</span></span>
<span class="line"><span>        location [PATTERN]   #location块</span></span>
<span class="line"><span>        {</span></span>
<span class="line"><span>            ...</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        location [PATTERN] </span></span>
<span class="line"><span>        {</span></span>
<span class="line"><span>            ...</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    server</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>      ...</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    ...     #http全局块</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li>全局配置包括用户、进程 PID、日志等的配置。</li><li>events 配置 nginx 的访问、网络连接。</li><li>http 块配置包括多个 server 块，一个个的服务。</li><li>server 可以配置多个，专有名词叫虚拟主机。</li><li>localtion 配置匹配的路径，可以用正则表达式。</li></ul><p>下面是我服务器 <code>imufeng.cn</code> blog 服务的 nginx 配置：</p><p><code>nginx.conf</code></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                nginx;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">pid </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 logs/nginx.pid;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">worker_processes </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    auto;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">worker_rlimit_nofile </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65535</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load modules</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             /etc/nginx/modules-enabled/*.conf;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    multi_accept </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    worker_connections </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65535</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    charset </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               utf-8;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    sendfile </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">              on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    tcp_nopush </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    tcp_nodelay </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_tokens </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    log_not_found </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    types_hash_max_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    types_hash_bucket_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    client_max_body_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  16M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # MIME</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               mime.types;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    default_type </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          application/octet-stream;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Logging</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    error_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             /dev/null;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # SSL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_session_cache </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     shared:SSL:10m;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_session_tickets </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Diffie-Hellman parameter for DHE ciphersuites</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_dhparam </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           cert/dhparam.pem;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Mozilla Intermediate configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         TLSv1.2 TLSv1.3;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_ciphers </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # OCSP Stapling</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_stapling </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_stapling_verify </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    resolver </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">              1.1.1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0.0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8.8.8.8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8.8.4.4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 208.67.222.222</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 208.67.220.220</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> valid=60s;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    resolver_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      2s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Load configs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               imufeng.cn/*.conf;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>imufeng.cn/blog.conf</code></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">             443</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssl http2;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             [::]:443 ssl http2;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        blog.imufeng.cn;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               /home/mblog-vitepress-web;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # SSL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cert/imufeng.cn.cer;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cert/imufeng.cn.key;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # security</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            conf/global.conf/security.conf;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # logging</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         logs/blog.imufeng.cn.log combined buffer=512k flush=5m;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    error_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          logs/blog.imufeng.cn.error.log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # index.html fallback</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Content-Security-Policy </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default-src &#39;self&#39; &#39;unsafe-eval&#39;  http: https: ws: wss: data: blob: &#39;unsafe-inline&#39; &#39;unsafe-eval&#39;;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ $uri.html /404.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>其中证书及 dhparam 配置详见我的博客 <a href="https://www.imufeng.cn/training/linux/acme-sh.html" target="_blank" rel="noreferrer">泛域名证书申请以及部署 | MBlog (imufeng.cn)</a></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://nginx.org/en/docs/configure.html" target="_blank" rel="noreferrer">Building nginx from Sources</a></li><li><a href="https://www.runoob.com/w3cnote/nginx-setup-intro.html" target="_blank" rel="noreferrer">Nginx 配置详解 | 菜鸟教程 (runoob.com)</a></li></ul>`,53),e=[p];function t(h,k,r,d,g,c){return i(),a("div",{"data-pagefind-body":!0},e)}const y=s(l,[["render",t]]);export{o as __pageData,y as default};
